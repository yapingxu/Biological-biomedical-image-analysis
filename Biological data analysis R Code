read.NIFTI(D:/Medical Data/Task04_Hippocampus/Task04_Hippocampus/imagesTr/hippocampus_001, level = 0.75,setmask=TRUE)
read.NIFTI("D:/Medical Data/Task04_Hippocampus/Task04_Hippocampus/imagesTr/hippocampus_001", level = 0.75,setmask=TRUE)
read.NIFTI("D:/Medical Data/Task04_Hippocampus/Task04_Hippocampus/imagesTr","hippocampus_001", level = 0.75,setmask=TRUE)
read.NIFTI(hippocampus_001, level = 0.75,setmask=TRUE)
library(oro.nifti)
install.packages("oro.nifti")
install.packages("neurobase")
install.packages("oro.nifti")
install.packages("oro.nifti")
install.packages("neurobase")
library(neurobase)
library(oro.nifti)
library(neurobase)
t1 = readnii("hippocampus_001.nii.gz")
t1 = readnii("D:/Medical Data/Task04_Hippocampus/Task04_Hippocampus/imagesTr/hippocampus_001.nii.gz")
class(t1)
nifti image()
nifti image(t1)
image(t1, z = 225, plot.type = "single")
image(t1,  plot.type = "single")
t2 = readnii("D:/Medical Data/Task04_Hippocampus/Task04_Hippocampus/imagesTs/hippocampus_002.nii.gz")
image(t2,  plot.type = "single")
t3 = readnii("D:/Medical Data/Task02_Heart/Task02_Heart/imagesTr/la_003.nii.gz")
image(t3,  plot.type = "single")
t4 = readnii("D:/Medical Data/Task02_Heart/Task02_Heart/imagesTs/la_001.nii.gz")
image(t4,  plot.type = "single")
t5 = readnii("D:/Medical Data/Task09_Spleen/Task09_Spleen/imagesTr/spleen_2.nii.gz")
image(t5,  plot.type = "single")
library(raster)
library("raster")
install.packages("raster")
library("raster")
library(raster)
library(rgdal)
install.packages("rgdal")
GDALinfo("D:/Medical Data/Omero Harvard/Melanoma2/Blue.jpg")
library(rgdal)
GDALinfo("D:/Medical Data/Omero Harvard/Melanoma2/Blue.jpg")
MelanomaBlueData<-("D:/Medical Data/Omero Harvard/Melanoma2/Blue.jpg")
MelanomaBlueData
MelanomaBlueData<-raster("D:/Medical Data/Omero Harvard/Melanoma2/Blue.jpg")
MelanomaBlueData
summary(MelanomaBlueData)
MelanomaBlueDatadf <- as.data.frame(MelanomaBlueData, xy = TRUE)
str(MelanomaBlueDatadf)
ggplot() + geom_raster(data = MelanomaBlueDatadf , aes(x = x, y = y)) + scale_fill_viridis_c() + coord_quickmap()
install.packages("ggplot")
library(ggplot)
library("ggplot")
library(ggplot)
library("ggplot")
install.packages("ggplot")
install.packages("ggplot2")
library(ggplot2)
ggplot() + geom_raster(data = MelanomaBlueDatadf , aes(x = x, y = y)) + scale_fill_viridis_c() + coord_quickmap()
ggplot() + geom_raster(data = MelanomaBlueDatadf , aes(x = x, y = y, fill = HARV_dsmCrop)) + scale_fill_viridis_c() + coord_quickmap()
library(raster)
install.packages("raster")
install.packages(raster)
library(raster)
MelanomaBlueToPolygon<-rasterToPolygons(MelanomaBlueData)
library(rgdal)
install.packages("rgdal")
library(rgdal)
MelanomaBlueToPolygon<-rasterToPolygons(MelanomaBlueData)
savehistory("D:/Medical Data/Harvard/Codes.txt")
library("openxlsx")
install.packages("openxlsx")
library("openxlsx")
path<-"D:\Medical Data\Harvard\Question2"
path<-"D:/Medical Data/Harvard/Question2"
CellData<-read.xlsx(path,sheet=1,colNames = TRUE)
path<-"D:/Medical Data/Harvard/Question2/CellIntensity_Hoechsts.xlsx"
CellData<-read.xlsx(path,sheet=1,colNames = TRUE)
dim(CellData)
str(CellData)
head(CellData)
library(corrplot)
install.packages("corrplot")
library(corrplot)
M<-cor(Dataset[3:12])
M<-cor(CellData[3:12])
col1 <- colorRampPalette(c("#7F0000","red","#FF7F00","yellow","white","cyan", "#007FFF", "blue","#00007F"))
corrplot(M, order="hclust", addrect=2, col=col1(100))
M<-cor(CellData[4:13])
col1 <- colorRampPalette(c("#7F0000","red","#FF7F00","yellow","white","cyan", "#007FFF", "blue","#00007F"))
corrplot(M, order="hclust", addrect=2, col=col1(100))
path<-"D:/Medical Data/Harvard/Question2/CellIntensity_Hoechsts.xlsx"
CellData<-read.xlsx(path,sheet=1,colNames = TRUE)
M<-cor(Dataset[3:12])
M<-cor(CellData[4:13])
col1 <- colorRampPalette(c("#7F0000","red","#FF7F00","yellow","white","cyan", "#007FFF", "blue","#00007F"))
corrplot(M, order="hclust", addrect=2, col=col1(100))
bloxpot(Hoechst 1)
col1 <- colorRampPalette(c("#7F0000","red","#FF7F00","yellow","white","cyan", "#007FFF", "blue","#00007F"))
corrplot(M, order="hclust", addrect=2, col=col1(100))
path<-"D:/Medical Data/Harvard/Question2/CellIntensity_Hoechsts.xlsx"
CellData<-read.xlsx(path,sheet=1,colNames = TRUE)
col1 <- colorRampPalette(c("#7F0000","red","#FF7F00","yellow","white","cyan", "#007FFF", "blue","#00007F"))
corrplot(M, order="hclust", addrect=2, col=col1(100))
M<-cor(CellData[4:13])
col1 <- colorRampPalette(c("#7F0000","red","#FF7F00","yellow","white","cyan", "#007FFF", "blue","#00007F"))
corrplot(M, order="hclust", addrect=2, col=col1(100))
boxplot(CellData$Hoechst1)
boxplot(Hoechst1)
boxplot(CellData$Hoechst1,CellData$Hoechst2,CellData$Hoechst3,CellData$Hoechst4,CellData$Hoechst5,CellData$Hoechst6,CellData$Hoechst7,CellData$Hoechst8,CellData$Hoechst9,CellData$Hoechst10)
main = "Multiple Boxplots for Hoechst Channels",at = c(1,2,3,4,5,6,7,8,9,10),names = c("Hoechst1", "Hoechst2", "Hoechst3", "Hoechst4","Hoechst5","Hoechst6","Hoechst7","Hoechst8","Hoechst9","Hoechst10")
boxplot(CellData$Hoechst1,CellData$Hoechst2,CellData$Hoechst3,CellData$Hoechst4,CellData$Hoechst5,CellData$Hoechst6,CellData$Hoechst7,CellData$Hoechst8,CellData$Hoechst9,CellData$Hoechst10, main = "Multiple Boxplots for Hoechst Channels",at = c(1,2,3,4,5,6,7,8,9,10),names = c("Hoechst1", "Hoechst2", "Hoechst3", "Hoechst4","Hoechst5","Hoechst6","Hoechst7","Hoechst8","Hoechst9","Hoechst10")
,)
boxplot(CellData$Hoechst1,CellData$Hoechst2,CellData$Hoechst3,CellData$Hoechst4,CellData$Hoechst5,CellData$Hoechst6,CellData$Hoechst7,CellData$Hoechst8,CellData$Hoechst9,CellData$Hoechst10, main = "Multiple Boxplots for Hoechst Channels",at = c(1,2,3,4,5,6,7,8,9,10),names = c("Hoechst1", "Hoechst2", "Hoechst3", "Hoechst4","Hoechst5","Hoechst6","Hoechst7","Hoechst8","Hoechst9","Hoechst10"))
path2<-"D:/Medical Data/Harvard/Question2/HoechstStatistics.xlsx"
CellData2<-read.xlsx(path2,sheet=1,colNames = TRUE)
dim(CellData2)
head(CellData2)
plot(CellData2$Hoechst,CellData2$MEAN)
fit1<-lm(CellData2$MEAN~CellData2$Hoechst)
fit2<-lm(CellData2$MEAN~poly(CellData2$Hoechst,2)
)
fit3<-lm(CellData2$MEAN~poly(CellData2$Hoechst,6))
lines(xx, predict(fit1, data.frame(x=xx)), col='blue')
xx <- seq(0,11, length.out=250)
lines(xx, predict(fit1, data.frame(x=xx)), col='blue')
xx <- seq(0,11, length.out=10)
lines(xx, predict(fit1, data.frame(x=xx)), col='blue')
lines(xx, predict(fit2, data.frame(x=xx)), col='green')
lines(xx, predict(fit3, data.frame(x=xx)), col='red')
xx <- seq(0,100, length.out=10)
lines(xx, predict(fit3, data.frame(x=xx)), col='red')
xx <- seq(0,100, length.out=100)
lines(xx, predict(fit3, data.frame(x=xx)), col='red')
xx <- seq(0,1000, length.out=10)
lines(xx, predict(fit3, data.frame(x=xx)), col='red')
xx <- seq(0,20, length.out=10)
lines(xx, predict(fit3, data.frame(x=xx)), col='red')
xx <- seq(0,5, length.out=10)
lines(xx, predict(fit3, data.frame(x=xx)), col='red')
fit4<-lm(CellData2$MEAN~poly(CellData2$Hoechst,5))
xx <- seq(0,10, length.out=10)
lines(xx, predict(fit4, data.frame(x=xx)), col='red')
fit5<-lm(CellData2$MEAN~poly(CellData2$Hoechst,4))
lines(xx, predict(fit5, data.frame(x=xx)), col='red')
fit6<-lm(CellData2$MEAN~CellData2$Hoechst+I((CellData2$Hoechst)^2+I((CellData2$Hoechst)^3)
)
a
fit6<-lm(CellData2$MEAN~CellData2$Hoechst+I((CellData2$Hoechst)^2)+I((CellData2$Hoechst)^3))
lines(xx, predict(fit6, data.frame(x=xx)), col='red')
fit7<-lm(CellData2$MEAN~CellData2$Hoechst+I((CellData2$Hoechst)^2)+I((CellData2$Hoechst)^3)+I((CellData2$Hoechst)^4)
)
lines(xx, predict(fit7, data.frame(x=xx)), col='red')
fit7<-lm(CellData2$MEAN~CellData2$Hoechst+I((CellData2$Hoechst)^2)+I((CellData2$Hoechst)^3)+I((CellData2$Hoechst)^4+I((CellData2$Hoechst)^2))
)
fit7<-lm(CellData2$MEAN~CellData2$Hoechst+I((CellData2$Hoechst)^2)+I((CellData2$Hoechst)^3)+I((CellData2$Hoechst)^4)+I((CellData2$Hoechst)^5))
lines(xx, predict(fit7, data.frame(x=xx)), col='green')
fit8<-loess(CellData2$MEAN~CellData2$Hoechst)
lines(xx, predict(fit8, data.frame(x=xx)), col='green')
lines(predict(fit8), x=CellData2$MEAN, col='blue')
lines(predict(fit8), x=CellData2$Hoechst, col='blue')
summary(fit7)
summary(fit8)
summary(fit1)
lines(predict(fit8), x=CellData2$MEAN, col='blue')
plot(CellData2$MEAN, x=CellData2$MEAN, type="l", main="Loess Smoothing and Prediction", xlab="HoechstChannel", ylab="ChannelMean")
plot(CellData2$MEAN, x=CellData2$Hoechst, type="l", main="Loess Smoothing and Prediction", xlab="HoechstChannel", ylab="ChannelMean")
lines(predict(fit8), x=CellData2$MEAN, col='blue')
lines(predict(fit8), x=CellData2$Hoechst, col='blue')
library( dplyr )    # data wrangling
library( pander )   # formatting output
library( ggmap )    # grab map tiles
library( viridis )  # color pallette for maps
library( ggplot2 )  # fancy graphics
library( ggthemes ) # fancy themes for ggplots
